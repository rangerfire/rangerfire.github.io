<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[God Bless Programmer]]></title>
    <url>%2F2018%2F05%2F08%2FNeverBug%2F</url>
    <content type="text"><![CDATA[_oo0oo_ _oo0oo_ o8888888o o8888888o 88&quot; . &quot;88 88&quot; . &quot;88 (| -_- |) (| -_- |) 0\ = /0 0\ = /0 ___/`---&apos;\___ ___/`---&apos;\___ .&apos; \\| |// &apos;. .&apos; \\| |// &apos;. / \\||| : |||// \ / \\||| : |||// \ / _||||| -:- |||||- \ / _||||| -:- |||||- \ | | \\\ - /// | | | | \\\ - /// | | | \_| &apos;&apos;\---/&apos;&apos; |_/ | | \_| &apos;&apos;\---/&apos;&apos; |_/ | \ .-\__ &apos;-&apos; ___/-. / \ .-\__ &apos;-&apos; ___/-. / ___&apos;. .&apos; /--.--\ `. .&apos;___ ___&apos;. .&apos; /--.--\ `. .&apos;___ .&quot;&quot; &apos;&lt; `.___\_&lt;|&gt;_/___.&apos; &gt;&apos; &quot;&quot;. .&quot;&quot; &apos;&lt; `.___\_&lt;|&gt;_/___.&apos; &gt;&apos; &quot;&quot;. | | : `- \`.;`\ _ /`;.`/ - ` : | | | | : `- \`.;`\ _ /`;.`/ - ` : | | \ \ `_. \_ __\ /__ _/ .-` / / \ \ `_. \_ __\ /__ _/ .-` / / =====`-.____`.___ \_____/___.-`___.-&apos;===== =====`-.____`.___ \_____/___.-`___.-&apos;===== `=---=&apos; `=---=&apos; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 写字楼里写字间，写字间里程序员； 程序人员写程序，又拿程序换酒钱。 酒醒只在网上坐，酒醉还来网下眠； 酒醉酒醒日复日，网上网下年复年。 但愿老死电脑间，不愿鞠躬老板前； 奔驰宝马贵者趣，公交自行程序员。 别人笑我忒疯癫，我笑自己命太贱； 不见满街漂亮妹，哪个归得程序员？]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo之路]]></title>
    <url>%2F2018%2F05%2F08%2FUntitled%20Document%2F</url>
    <content type="text"><![CDATA[Markdown文章示例 Dillinger Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor. Type some Markdown on the left See HTML in the right Magic New Features! Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) You can also: Import and save files from GitHub, Dropbox, Google Drive and One Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site The overriding design goal for Markdown’sformatting syntax is to make it as readableas possible. The idea is that aMarkdown-formatted document should bepublishable as-is, as plain text, withoutlooking like it’s been marked up with tagsor formatting instructions. This text you see here is actually written in Markdown! To get a feel for Markdown’s syntax, type some text into the left window and watch the results in the right. TechDillinger uses a number of open source projects to work properly: AngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub. InstallationDillinger requires Node.js v4+ to run. Install the dependencies and devDependencies and start the server. 123$ cd dillinger$ npm install -d$ node app For production environments… 12$ npm install --production$ NODE_ENV=production node app PluginsDillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below. Plugin README Dropbox plugins/dropbox/README.md Github plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md DevelopmentWant to contribute? Great! Dillinger uses Gulp + Webpack for fast developing.Make a change in your file and instantanously see your updates! Open your favorite Terminal and run these commands. First Tab:1$ node app Second Tab:1$ gulp watch (optional) Third:1$ karma test Building for sourceFor production release:1$ gulp build --prod Generating pre-built zip archives for distribution:1$ gulp build dist --prod DockerDillinger is very easy to install and deploy in a Docker container. By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image. 12cd dillingerdocker build -t joemccann/dillinger:$&#123;package.json.version&#125; This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger. Once done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile): 1docker run -d -p 8000:8080 --restart="always" &lt;youruser&gt;/dillinger:$&#123;package.json.version&#125; Verify the deployment by navigating to your server address in your preferred browser. 1127.0.0.1:8000 Kubernetes + Google CloudSee KUBERNETES.md Todos Write MORE Tests Add Night Mode LicenseMIT Free Software, Hell Yeah!]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Node.js</tag>
        <tag>Github Pages</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo之路]]></title>
    <url>%2F2018%2F05%2F08%2FHow-to-get-this%2F</url>
    <content type="text"><![CDATA[基本环境 &amp; 配置（具体如何配置环境请自行google）-Node.js &amp; npm 环境 可以通过控制台下输入： node -v npm -v 若出现 &lt;img src=&quot;/image/version_test1.png&quot; width= &quot;30%&quot; height=&quot;30%&quot;&gt; 则说明Node.js以及npm配置成功 - Git环境 同样通过控制台输入 git --version 若出现 &lt;img src=&quot;/image/version_test2.png&quot; width= &quot;30%&quot; height=&quot;30%&quot;&gt; 则说明git配置成功 在Github上创建代码库（用于存放blog的代码）在github中创建一个新的repository,这个仓库的名字要用yourname.github.io这个形式 （例如你的github的用户名叫ABC，那么久起名为ABC.github.io）,其他参数都默认，创建。 配置Hexo- 在你的PC上创建一个新文件夹，你的网站的所有文件都会存在这个文件夹中 - 打开这个空文件夹，空白处 shift + 鼠标右键，输入 hexo init 进行初始化工作，注意这一行代码只有在空文件夹下才起作用 - 继续输入 npm install hexo-cli -g 不用担心这些warn - 继续输入 npm install hexo --save 到这里hexo的环境应该已经配置好了，输入 hexo -v 来检查hexo环境,如果出现一堆版本信息，则说明配置成功 初始化Hexo- 可以接着上面输入 hexo init 如果这时你的文件夹不是空的就不用输入这一行了 - 继续输入 npm install 完成初始化 初步体验Hexo- 继续输入 hexo -g - 输入 hexo -s 浏览器中输入localhost:4000,可以看到一个初步的Hexo页面，格式都是Hexo为我们自动生成的，可以修改]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Node.js</tag>
        <tag>Github Pages</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[My first blog!]]></title>
    <url>%2F2018%2F05%2F07%2FMy-first-blog%2F</url>
    <content type="text"><![CDATA[Now, put a picture in this blog The Warriors have moved within a single victory of advancing to the Western Conference Finals after defeating the Pelicans 118-92 in Game 4 on Sunday. Golden State got off to a great start, building a double-digit lead within the first four minutes, as the Dubs would never trail at any point in the contest. Kevin Durant was unstoppable at times and finished with a personal 2018 postseason-high 38 points to lead all scorers, in addition to collecting nine rebounds and five assists. Stephen Curry added 23 points and four three-pointers, while Draymond Green just missed another triple-double with eight points, nine rebounds and nine assists.The Warriors have moved within a single victory of advancing to the Western Conference Finals after defeating the Pelicans 118-92 in Game 4 on Sunday. Golden State got off to a great start, building a double-digit lead within the first four minutes, as the Dubs would never trail at any point in the contest. Kevin Durant was unstoppable at times and finished with a personal 2018 postseason-high 38 points to lead all scorers, in addition to collecting nine rebounds and five assists. Stephen Curry added 23 points and four three-pointers, while Draymond Green just missed another triple-double with eight points, nine rebounds and nine assists.The Warriors have moved within a single victory of advancing to the Western Conference Finals after defeating the Pelicans 118-92 in Game 4 on Sunday. Golden State got off to a great start, building a double-digit lead within the first four minutes, as the Dubs would never trail at any point in the contest. Kevin Durant was unstoppable at times and finished with a personal 2018 postseason-high 38 points to lead all scorers, in addition to collecting nine rebounds and five assists. Stephen Curry added 23 points and four three-pointers, while Draymond Green just missed another triple-double with eight points, nine rebounds and nine assists.The Warriors have moved within a single victory of advancing to the Western Conference Finals after defeating the Pelicans 118-92 in Game 4 on Sunday. Golden State got off to a great start, building a double-digit lead within the first four minutes, as the Dubs would never trail at any point in the contest. Kevin Durant was unstoppable at times and finished with a personal 2018 postseason-high 38 points to lead all scorers, in addition to collecting nine rebounds and five assists. Stephen Curry added 23 points and four three-pointers, while Draymond Green just missed another triple-double with eight points, nine rebounds and nine assists.]]></content>
  </entry>
</search>
