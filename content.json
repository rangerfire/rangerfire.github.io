{"meta":{"title":"Sicong·Wang·Blog","subtitle":"Valar Dohaeris","description":"Valar Morghulis","author":"Sicong Wang","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"God Bless Programmer","slug":"NeverBug","date":"2028-05-09T00:02:11.000Z","updated":"2018-05-13T22:34:43.613Z","comments":true,"path":"2028/05/08/NeverBug/","link":"","permalink":"http://yoursite.com/2028/05/08/NeverBug/","excerpt":"","text":"_oo0oo_ _oo0oo_ o8888888o o8888888o 88&quot; . &quot;88 88&quot; . &quot;88 (| -_- |) (| -_- |) 0\\ = /0 0\\ = /0 ___/`---&apos;\\___ ___/`---&apos;\\___ .&apos; \\\\| |// &apos;. .&apos; \\\\| |// &apos;. / \\\\||| : |||// \\ / \\\\||| : |||// \\ / _||||| -:- |||||- \\ / _||||| -:- |||||- \\ | | \\\\\\ - /// | | | | \\\\\\ - /// | | | \\_| &apos;&apos;\\---/&apos;&apos; |_/ | | \\_| &apos;&apos;\\---/&apos;&apos; |_/ | \\ .-\\__ &apos;-&apos; ___/-. / \\ .-\\__ &apos;-&apos; ___/-. / ___&apos;. .&apos; /--.--\\ `. .&apos;___ ___&apos;. .&apos; /--.--\\ `. .&apos;___ .&quot;&quot; &apos;&lt; `.___\\_&lt;|&gt;_/___.&apos; &gt;&apos; &quot;&quot;. .&quot;&quot; &apos;&lt; `.___\\_&lt;|&gt;_/___.&apos; &gt;&apos; &quot;&quot;. | | : `- \\`.;`\\ _ /`;.`/ - ` : | | | | : `- \\`.;`\\ _ /`;.`/ - ` : | | \\ \\ `_. \\_ __\\ /__ _/ .-` / / \\ \\ `_. \\_ __\\ /__ _/ .-` / / =====`-.____`.___ \\_____/___.-`___.-&apos;===== =====`-.____`.___ \\_____/___.-`___.-&apos;===== `=---=&apos; `=---=&apos; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 写字楼里写字间，写字间里程序员； 程序人员写程序，又拿程序换酒钱。 酒醒只在网上坐，酒醉还来网下眠； 酒醉酒醒日复日，网上网下年复年。 但愿老死电脑间，不愿鞠躬老板前； 奔驰宝马贵者趣，公交自行程序员。 别人笑我忒疯癫，我笑自己命太贱； 不见满街漂亮妹，哪个归得程序员？","categories":[],"tags":[]},{"title":"Hexo之路<三>","slug":"How-to-get-this_3","date":"2018-05-17T00:31:11.000Z","updated":"2018-05-17T00:16:20.702Z","comments":true,"path":"2018/05/16/How-to-get-this_3/","link":"","permalink":"http://yoursite.com/2018/05/16/How-to-get-this_3/","excerpt":"","text":"优化next主题的一些操作1. 选择一个主题 theme的选择有很多，这里推荐一个主题网站 这里我选择的是使用人数最多的NEXT主题，参考的文档较多，便于入手 导入hexo主题方法： 1git clone https://github.com/iissnan/hexo-theme-next themes/next 导入成功后，themes文件下会出现一个名为next文件夹，此时只是将next的主题包下载了下来，需要在站点配置文件中设置主题，也就是在站点配置文件中找到theme字段，将它的值改为你的主题名，这里我改为next 1theme: next 2. 两个主要配置文件 在根目录下的_config.yml文件，叫做站点配置文件 在主题目录下也会有一个_config.yml文件，叫做主题配置文件 3. 看下效果 更换主题后，一般要做如下三个操作 123hexo cleanhexo ghexo s 然后打开localhost:4000看看效果，是不是已经变成你的主题了~ 当然，主题中的很多插件都是默认关闭的，需要在之后的配置中根据自己的喜好设置，所以一开始看到的界面会很简单~ 4. 个性化域名 除了在本地演示，博客还可以通过你当时创建的仓库名来访问（你的用户名.github.io），不过每次完成更新后需要 1hexo d 来发布你的更新到服务器上，如果还是没有效果，可以这样： 123hexo cleanhexo ghexo d 来一遍完整的~ 如果觉得github的域名不好记，可以在一些域名网站购买一个喜欢的域名（.com域名最好），我买的域名是mambawang.com 买完域名后，需要与我们的博客网站绑定，先进入博客根目录的source文件中，创建一个名为CNAME的无后缀的文件，内容为你购买的域名 1mambawang.com 这里不需要加www，这样以后加不加www都可以访问你的网站 创建完CNAME文件之后，还要去你购买域名的网站的DNS的管理界面添加以下三条记录，过一会就可以直接输入你的域名访问博客了！ 不过，不知道是什么原因，使用godaddy自带的DNS时老是出问题，后来我把DNS转到DNSPOD上，就再也没出过问题了 记录类型 主机记录 记录值 解析线路 CNAME www 用户名.github.io default A @ 192.30.252.153 default A @ 192.30.252.154 default 5. 未完待续 听点儿歌吧~ 1.头像2.背景透明3.音乐4.网站图标5.超链接语法6.腾讯公益4047.菜单栏添加8.点击爆炸9.背景动画10.","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"Hexo之路<二>","slug":"How-to-get-this_2","date":"2018-05-16T18:31:11.000Z","updated":"2018-05-17T00:11:57.141Z","comments":true,"path":"2018/05/16/How-to-get-this_2/","link":"","permalink":"http://yoursite.com/2018/05/16/How-to-get-this_2/","excerpt":"","text":"完成基本配置后，怎么让我们的博客更好看？1. 选择一个主题 theme的选择有很多，这里推荐一个主题网站 这里我选择的是使用人数最多的NEXT主题，参考的文档较多，便于入手 导入hexo主题方法： 1git clone https://github.com/iissnan/hexo-theme-next themes/next 导入成功后，themes文件下会出现一个名为next文件夹，此时只是将next的主题包下载了下来，需要在站点配置文件中设置主题，也就是在站点配置文件中找到theme字段，将它的值改为你的主题名，这里我改为next 1theme: next 2. 两个主要配置文件 在根目录下的_config.yml文件，叫做站点配置文件 在主题目录下也会有一个_config.yml文件，叫做主题配置文件 3. 看下效果 更换主题后，一般要做如下三个操作 123hexo cleanhexo ghexo s 然后打开localhost:4000看看效果，是不是已经变成你的主题了~ 当然，主题中的很多插件都是默认关闭的，需要在之后的配置中根据自己的喜好设置，所以一开始看到的界面会很简单~ 4. 个性化域名 除了在本地演示，博客还可以通过你当时创建的仓库名来访问（你的用户名.github.io），不过每次完成更新后需要 1hexo d 来发布你的更新到服务器上，如果还是没有效果，可以这样： 123hexo cleanhexo ghexo d 来一遍完整的~ 如果觉得github的域名不好记，可以在一些域名网站购买一个喜欢的域名（.com域名最好），我买的域名是mambawang.com 买完域名后，需要与我们的博客网站绑定，先进入博客根目录的source文件中，创建一个名为CNAME的无后缀的文件，内容为你购买的域名 1mambawang.com 这里不需要加www，这样以后加不加www都可以访问你的网站 创建完CNAME文件之后，还要去你购买域名的网站的DNS的管理界面添加以下三条记录，过一会就可以直接输入你的域名访问博客了！ 不过，不知道是什么原因，使用godaddy自带的DNS时老是出问题，后来我把DNS转到DNSPOD上，就再也没出过问题了 记录类型 主机记录 记录值 解析线路 CNAME www 用户名.github.io default A @ 192.30.252.153 default A @ 192.30.252.154 default 5. 未完待续 听点儿歌吧~","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"Node.js","slug":"Node-js","permalink":"http://yoursite.com/tags/Node-js/"},{"name":"Github Pages","slug":"Github-Pages","permalink":"http://yoursite.com/tags/Github-Pages/"}]},{"title":"Hexo之路<一>","slug":"How-to-get-this_1","date":"2018-05-08T18:31:11.000Z","updated":"2018-05-16T21:59:13.498Z","comments":true,"path":"2018/05/08/How-to-get-this_1/","link":"","permalink":"http://yoursite.com/2018/05/08/How-to-get-this_1/","excerpt":"","text":"1. 基本环境 &amp; 配置（具体如何配置环境请自行google） 检查Node.js &amp; npm 环境 检查Git环境 2. 在Github上创建代码库（用于上传blog代码） 在github中创建一个新的repository，这个仓库的名字要用yourname.github.io这个形式 例如: 你的github用户名叫ABC，那么仓库名必须为ABC.github.io，其他参数都默认即可 3. 配置Hexo 在你的PC上创建一个新文件夹，今后的所有操作都只在这个文件夹中进行（网站的所有文件都在这个文件夹中） 打开这个空文件夹，空白处 shift + 鼠标右键，输入 1hexo init 进行初始化工作，要注意的是初始化只有在空文件夹下才起作用 继续输入 1npm install hexo-cli -g 会出现一些warn，不用管它们 继续输入 1npm install hexo --save 到这里hexo的环境应该已经配置好了，输入 1hexo -v 来检查hexo环境，如果出现一堆版本信息，则说明配置成功 4. 初始化Hexo 接着上面输入 1hexo init 不过，如果这时你的文件夹不是空的就不用输入这一行了 继续输入 1npm install 完成初始化 5. 初步体验Hexo 继续输入 1hexo -g 最后输入 1hexo -s 浏览器中输入localhost:4000，可以看到一个初步的Hexo页面，格式都是Hexo为我们自动生成的，可以修改 6. 未完待续 听点儿歌吧~","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"Node.js","slug":"Node-js","permalink":"http://yoursite.com/tags/Node-js/"},{"name":"Github Pages","slug":"Github-Pages","permalink":"http://yoursite.com/tags/Github-Pages/"}]},{"title":"Markdown文章示例","slug":"Untitled Document","date":"2018-05-07T16:55:11.000Z","updated":"2018-05-13T22:34:04.643Z","comments":true,"path":"2018/05/07/Untitled Document/","link":"","permalink":"http://yoursite.com/2018/05/07/Untitled Document/","excerpt":"","text":"Dillinger Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor. Type some Markdown on the left See HTML in the right Magic New Features! Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) You can also: Import and save files from GitHub, Dropbox, Google Drive and One Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site The overriding design goal for Markdown’sformatting syntax is to make it as readableas possible. The idea is that aMarkdown-formatted document should bepublishable as-is, as plain text, withoutlooking like it’s been marked up with tagsor formatting instructions. This text you see here is actually written in Markdown! To get a feel for Markdown’s syntax, type some text into the left window and watch the results in the right. TechDillinger uses a number of open source projects to work properly: AngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub. InstallationDillinger requires Node.js v4+ to run. Install the dependencies and devDependencies and start the server. 123$ cd dillinger$ npm install -d$ node app For production environments… 12$ npm install --production$ NODE_ENV=production node app PluginsDillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below. Plugin README Dropbox plugins/dropbox/README.md Github plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md DevelopmentWant to contribute? Great! Dillinger uses Gulp + Webpack for fast developing.Make a change in your file and instantanously see your updates! Open your favorite Terminal and run these commands. First Tab:1$ node app Second Tab:1$ gulp watch (optional) Third:1$ karma test Building for sourceFor production release:1$ gulp build --prod Generating pre-built zip archives for distribution:1$ gulp build dist --prod DockerDillinger is very easy to install and deploy in a Docker container. By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image. 12cd dillingerdocker build -t joemccann/dillinger:$&#123;package.json.version&#125; This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger. Once done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile): 1docker run -d -p 8000:8080 --restart=\"always\" &lt;youruser&gt;/dillinger:$&#123;package.json.version&#125; Verify the deployment by navigating to your server address in your preferred browser. 1127.0.0.1:8000 Kubernetes + Google CloudSee KUBERNETES.md Todos Write MORE Tests Add Night Mode LicenseMIT Free Software, Hell Yeah!","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"Node.js","slug":"Node-js","permalink":"http://yoursite.com/tags/Node-js/"},{"name":"Github Pages","slug":"Github-Pages","permalink":"http://yoursite.com/tags/Github-Pages/"}]}]}